package {{ .Package }}

import (
	"ergo.services/ergo/gen"
)

func Create{{ .Name }}() gen.ApplicationBehavior {
	return &{{ .Name }}{}
}

type {{ .Name }} struct {}

func (app *{{ .Name }}) Load(node gen.Node, args ...any) (gen.ApplicationSpec, error) {
	return gen.ApplicationSpec{
		Name: "{{ .LoName }}",
		Description: "description of this application",
		Group: []gen.ApplicationMemberSpec{
		{{ range .Group -}}
			gen.ApplicationMemberSpec{
				Name:  "{{ .LoName }}",
				Factory: factory{{ .Name }}(),
			},
		{{ end -}}
		},
	}, nil
}

func (app *{{ .Name }}) Start(mode gen.ApplicationMode) {}
func (app *{{ .Name }}) Terminate(reason error)         {}
