package {{.Package}}

import (
	"ergo.services/ergo"
	"ergo.services/ergo/gen"
)

func main() {
	var options node.Options
	{{ if .Processes -}}
	var pid gen.PID
	{{ end }}

	{{ if index .Params "applications" }}
	// Create applications that must be started
	options.Applications = []gen.ApplicationBehavior{ {{ range index .Params "applications" }}
	{{ .LoName }}.Create{{ .Name }}(), {{ end }}
	}
	{{ end }}

	// Starting node
	node{{.Name}}, err := ergo.StartNode(OptionNodeName, options)
	if err != nil {
		panic(err)
	}

	{{ range .Processes}}
	// starting process {{ .Name }}
	pid, err = node{{$.Name}}.SpawnRegister("{{ .LoName }}", factory{{ .Name }}, gen.ProcessOptions{})
	if err != nil {
		panic(err)
	}
	node{{.Name}}.Log().Info("'%s' with PID %s is started\n", {{ .Name }}, pid)
	{{ end }}

	node{{.Name}}.Wait()
}
